<?php

/**
 * Docexa Doctor Micro Service API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: satish.soni@globalspace.in
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

namespace App\Http\Controllers;

use App\MedicalRecord;
use Illuminate\Http\Request;
use App\Vital;
use App\Medicalrecordsharing;

class EmrApi extends Controller
{

    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation vital 
     *
     * @param number $profile send patient id  (required)
     *
     * @return Http response
     */

    /**
    * @OA\Post(
    * path="/emr/patient/{loginID}/{profileID}/vital",
    * tags={"EMR"},
    * description="post vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\RequestBody(
     *  required=true,
     *  description="Pass doctor details",
     *  @OA\JsonContent(
     *      type="object",
     *                  @OA\Property(property="name", type="string", format="text", example="ecg"),
     *                  @OA\Property(property="value", type="string", format="text", example="100"),
     *                  @OA\Property(property="sample_date", type="date", example="2022-05-10"),
     *                  @OA\Property(property="description", type="string", example="description"),
     * ),
     * ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function setVital($loginID, $profileID, Request $request)
    {

        $vital = $request->all();
        $insertArray = ["vital_name"=>$vital['name'],"value"=>$vital['value'],"sample_date"=>$vital['sample_date'],"profile_id"=>$profileID,"description"=>$vital['description']];
        Vital::insert($insertArray);
        return response()->json(['status' => 'success'], 200);
    }
    /**
    * @OA\Put(
    * path="/emr/patient/{loginID}/{profileID}/vital/{vitalID}",
    * tags={"EMR"},
    * description="post vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * * @OA\Parameter(
     *         name="vitalID",
     *         in="path",
     *         description="vitalID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\RequestBody(
     *  required=true,
     *  description="Pass doctor details",
     *  @OA\JsonContent(
     *      type="object",
     *                  @OA\Property(property="name", type="string", format="text", example="ecg"),
     *                  @OA\Property(property="value", type="string", format="text", example="100"),
     *                  @OA\Property(property="sample_date", type="date", example="2022-05-10"),
     *                  @OA\Property(property="description", type="string", example="description"),
     * ),
     * ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function editVital($loginID, $profileID,$vitalID, Request $request)
    {

        $vital = $request->all();
        $vitalobj = Vital::find($vitalID);
        if(isset($vitalobj->id)){
        $vitalobj->vital_name = $vital['name'];
        $vitalobj->value = $vital['value'];
        $vitalobj->sample_date = $vital['sample_date'];
        $vitalobj->description = $vital['description'];
        $vitalobj->save();
            return response()->json(['status' => 'success'], 200);
        }else{
            return response()->json(['status' => 'fail'], 400);
        }
    }
    /**
    * @OA\Delete(
    * path="/emr/patient/{loginID}/{profileID}/vital/{vitalID}",
    * tags={"EMR"},
    * description="post vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * * @OA\Parameter(
     *         name="vitalID",
     *         in="path",
     *         description="vitalID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function deleteVital($loginID, $profileID,$vitalID)
    {

        //$vital = $request->all();
        $vitalobj = Vital::find($vitalID)->delete();
        return response()->json(['status' => 'success'], 200);
    }
    /**
    * @OA\Get(
    * path="/emr/patient/{loginID}/{profileID}/vital",
    * tags={"EMR"},
    * description="Get vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function getVital($loginID, $profileID)
    {

        $data['vital'] = Vital::where(array('profile_id'=>$profileID))->get();
        return response()->json(['status' => 'success','data'=>$data], 200);
    }
    /**
    * @OA\Post(
    * path="/emr/patient/{loginID}/{profileID}/medicalrecord",
    * tags={"EMR"},
    * description="post vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\RequestBody(
     *  required=true,
     *  description="Pass doctor details",
     *  @OA\JsonContent(
     *      type="object",
     *       @OA\Property(property="url", type="string", format="text", example="google.com"),
     *       @OA\Property(property="description", type="string", format="text", example="precription desc"),
     *       @OA\Property(property="date", type="string", format="text", example="2022-06-17"),
     *  ),
     * ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function setMedicalRecord($loginID, $profileID, Request $request)
    {

        $data = $request->all();
        $mr = new MedicalRecord();
        $mr->report_link = $data['url'];
        $mr->date = $data['date'];
        $mr->description = $data['description'];
        $mr->profile_id = $profileID;
        $mr->save();
        return response()->json(['status' => 'success'], 200);
    }
    /**
    * @OA\Put(
    * path="/emr/patient/{loginID}/{profileID}/medicalrecord/{recordID}",
    * tags={"EMR"},
    * description="post vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * * @OA\Parameter(
     *         name="recordID",
     *         in="path",
     *         description="recordID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\RequestBody(
     *  required=true,
     *  description="Pass doctor details",
     *  @OA\JsonContent(
     *      type="object",
     *       @OA\Property(property="url", type="string", format="text", example="google.com"),
     *       @OA\Property(property="description", type="string", format="text", example="precription desc"),
     *       @OA\Property(property="date", type="string", format="text", example="2022-06-17"),
     *  ),
     * ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function editMedicalRecord($loginID, $profileID,$recordID, Request $request)
    {

        $data = $request->all();
        $mr = MedicalRecord::find($recordID);
        $mr->report_link = $data['url'];
        $mr->date = $data['date'];
        $mr->description = $data['description'];
        $mr->profile_id = $profileID;
        $mr->save();
        return response()->json(['status' => 'success'], 200);
    }
    /**
    * @OA\Delete(
    * path="/emr/patient/{loginID}/{profileID}/medicalrecord/{recordID}",
    * tags={"EMR"},
    * description="post vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * * @OA\Parameter(
     *         name="recordID",
     *         in="path",
     *         description="recordID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function deleteMedicalRecord($loginID, $profileID, $recordID)
    {

//        $data = $request->all();
        $mr = MedicalRecord::find($recordID)->delete();
        return response()->json(['status' => 'success'], 200);
    }
    /**
    * @OA\Get(
    * path="/emr/patient/{loginID}/{profileID}/medicalrecord",
    * tags={"EMR"},
    * description="post vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function getMedicalRecord($loginID, $profileID, Request $request)
    {

        $data = $request->all();
        $data = MedicalRecord::where(array('profile_id'=>$profileID))->get();
        return response()->json(['status' => 'success','data'=>$data], 200);
    }

     /**
    * @OA\Post(
    * path="/emr/patient/{loginID}/{profileID}/share/vital",
    * tags={"EMR"},
    * description="post sharing vital info",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\RequestBody(
     *  required=true,
     *  description="Pass doctor details",
     *  @OA\JsonContent(
     *      type="object",
     *                  @OA\Property(property="establishment_id", type="number", format="text", example="65887"),
     *                  @OA\Property(property="appointment_id", type="number", format="number", example="1"),
     * ),
     * ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function sharevital($loginID, $profileID, Request $request)
    {

        $shareinfo = $request->all();
        $share = new Medicalrecordsharing();
        $share->patient_id = $loginID;
        $share->profile_id = $profileID;
        $share->establishment_id = $shareinfo['establishment_id'];
        $share->type = 'vital';
        $share->appointment_id = $shareinfo['appointment_id'];
        $share->created_at = date('Y-m-d H:i:s');
        $share->updated_at = date('Y-m-d H:i:s');
        $share->expire_at  = date(date('Y-m-d H:i:s'), strtotime("+30 days"));
        $share->save();
        return response()->json(['status' => 'success'], 200);
    }

     /**
    * @OA\Post(
    * path="/emr/patient/{loginID}/{profileID}/share/medicalreport",
    * tags={"EMR"},
    * description="post medical report",
    * @OA\Parameter(
     *         name="loginID",
     *         in="path",
     *         description="login patient ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="profileID",
     *         in="path",
     *         description="profile ID",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\RequestBody(
     *  required=true,
     *  description="Pass doctor details",
     *  @OA\JsonContent(
     *      type="object",
     *                  @OA\Property(property="establishment_id", type="number", format="number", example="65887"),
     *                  @OA\Property(property="appointment_id", type="number", format="number", example="1"),
     *                  @OA\Property(property="record", type="string", format="text", example="1,2,3"),
     * ),
     * ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function sharemedicalreport($loginID, $profileID, Request $request)
    {

        $shareinfo = $request->all();
        $share = new Medicalrecordsharing();
        $share->patient_id = $loginID;
        $share->profile_id = $profileID;
        $share->establishment_id = $shareinfo['establishment_id'];
        $share->record = $shareinfo['record'];
        $share->appointment_id = $shareinfo['appointment_id'];
        $share->type = 'medicalreport';
        $share->created_at = date('Y-m-d H:i:s');
        $share->updated_at = date('Y-m-d H:i:s');
        $share->expire_at  = date(date('Y-m-d H:i:s'), strtotime("+30 days"));
        $share->save();
        return response()->json(['status' => 'success'], 200);
    }

    /**
    * @OA\Get(
    * path="/establishments/users/{esteblishmentusermapID}/medicalhistory/{appointment_id}",
    * tags={"EMR"},
    * description="get medical report",
    * @OA\Parameter(
     *         name="esteblishmentusermapID",
     *         in="path",
     *         description="esteblishmentusermapID",
     *         required=true,
     *         example=65887,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Parameter(
     *         name="appointment_id",
     *         in="path",
     *         description="appointment_id",
     *         required=true,
     *         example=1,
     *         @OA\Schema(type="number")
     *     ),
     * @OA\Response(
     *         response="200",
     * description="success",
     *    @OA\JsonContent(
     *       @OA\Property(property="success", type="string", example="success")
     *        )
     *     ),
     * @OA\Response(
     *         response="400",
     *         description="Error: Bad request. required parameters is not supplied.",    
     *    @OA\JsonContent(
     *       @OA\Property(property="error", type="string", example="ID not found")
     *        )
     *     ),
     * )
     */
    public function getsharinginfo($esteblishmentusermapID, $appointment_id)
    {

        
        $share = Medicalrecordsharing::where(array("establishment_id"=>$esteblishmentusermapID, "appointment_id"=>$appointment_id))->get();
        return response()->json(['status' => 'success','data'=>$share], 200);
    }
}
